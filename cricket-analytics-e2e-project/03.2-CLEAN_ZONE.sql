USE DATABASE DEMO_DB;

USE SCHEMA ALF_CLEAN;

USE WAREHOUSE LOAD_WH;

/*
    ALF_RAW: MATCH_RAW_TBL
    ALF_CLEAN: match_detail_clean
*/

-- EXTRACT PLAYERS 

-- VERSION 1 
SELECT INFO:match_type_number::NUMBER AS match_type_number,
INFO:players,
INFO:teams
FROM 
DEMO_DB.ALF_RAW.MATCH_RAW_TBL
;


-- VERSION 2
SELECT INFO:match_type_number::NUMBER AS match_type_number,
INFO:players,
INFO:teams
FROM 
DEMO_DB.ALF_RAW.MATCH_RAW_TBL
WHERE match_type_number = '4670'
;


-- VERSION 3
SELECT RAW.INFO:match_type_number::NUMBER AS match_type_number, 
-- P.* 
P.KEY AS COUNTRY
FROM DEMO_DB.ALF_RAW.MATCH_RAW_TBL AS RAW,
LATERAL FLATTEN (INPUT => RAW.INFO:players) AS P
WHERE match_type_number = '4670';

-- VERSION 4 

SELECT RAW.INFO:match_type_number::NUMBER AS match_type_number, 
-- P.* 
P.KEY AS COUNTRY, 
T.VALUE::VARCHAR AS PLAYER_NAME
FROM DEMO_DB.ALF_RAW.MATCH_RAW_TBL AS RAW,
LATERAL FLATTEN (INPUT => RAW.INFO:players) AS P,
LATERAL FLATTEN (INPUT => P.VALUE) AS T
--WHERE match_type_number = '4670'
;

-- CREATE TABLE PLAYER_CLEAN_TBL 
CREATE OR REPLACE TRANSIENT TABLE DEMO_DB.ALF_CLEAN.PLAYER_CLEAN_TBL
AS
SELECT RAW.INFO:match_type_number::NUMBER AS match_type_number, 
P.KEY AS COUNTRY, 
T.VALUE::VARCHAR AS PLAYER_NAME,
RAW.STG_FILE_NAME ,
RAW.STG_FILE_ROW_NUMBER,
RAW.STG_FILE_HASHKEY,
RAW.STG_FILE_MODIFIED_TS
FROM DEMO_DB.ALF_RAW.MATCH_RAW_TBL AS RAW,
LATERAL FLATTEN (INPUT => RAW.INFO:players) AS P,
LATERAL FLATTEN (INPUT => P.VALUE) AS T;


-- MATCH_DETAIL_CLEAN 
ALTER TABLE DEMO_DB.ALF_CLEAN.MATCH_DETAIL_CLEAN  
ADD CONSTRAINT PK_MATCH_TYPE_NUMBER PRIMARY KEY (MATCH_TYPE_NUMBER);
SELECT * FROM DEMO_DB.ALF_CLEAN.MATCH_DETAIL_CLEAN;
DESCRIBE TABLE DEMO_DB.ALF_CLEAN.PLAYER_CLEAN_TBL;



-- PLAYER_CLEAN_TBL
SELECT * FROM DEMO_DB.ALF_CLEAN.PLAYER_CLEAN_TBL;
DESCRIBE TABLE DEMO_DB.ALF_CLEAN.PLAYER_CLEAN_TBL;
ALTER TABLE DEMO_DB.ALF_CLEAN.PLAYER_CLEAN_TBL ALTER(
   MATCH_TYPE_NUMBER SET NOT NULL,
   COUNTRY SET NOT NULL,
   PLAYER_NAME SET NOT NULL
);

ALTER TABLE DEMO_DB.ALF_CLEAN.PLAYER_CLEAN_TBL  
ADD CONSTRAINT FK_MATCH_ID FOREIGN KEY (MATCH_TYPE_NUMBER)
REFERENCES DEMO_DB.ALF_CLEAN.MATCH_DETAIL_CLEAN (MATCH_TYPE_NUMBER);
<<<<<<< HEAD
=======



-- VERSION 1 - LETS EXTRACT THE ELEMENTS FROM innings array
SELECT M.INFO:match_type_number::NUMBER AS match_type_number,
F1.*
FROM DEMO_DB.ALF_RAW.MATCH_RAW_TBL M, 
LATERAL FLATTEN (INPUT => M.INNINGS) AS F1
where match_type_number = 4670
;


-- VERSION 1 - LETS EXTRACT THE ELEMENTS FROM innings array
SELECT M.INFO:match_type_number::NUMBER AS match_type_number,
F1.*
FROM DEMO_DB.ALF_RAW.MATCH_RAW_TBL M, 
LATERAL FLATTEN (INPUT => M.INNINGS) AS F1
where match_type_number = 4670
;
<<<<<<< HEAD


-- VERSION 2 - LETS EXTRACT THE ELEMENTS FROM innings array
SELECT M.INFO:match_type_number::NUMBER AS match_type_number,
I.VALUE:team::string as TEAM,
O.VALUE:over::NUMBER AS OVER,
D.VALUE:bowler::VARCHAR AS bowler,
D.VALUE:non_striker::VARCHAR AS non_striker,
D.VALUE:runs.batter::NUMBER AS BATTER,
D.VALUE:runs.extras::NUMBER AS extras,
D.VALUE:runs.total::NUMBER AS total,
E.VALUE::NUMBER AS EXTRA_RUNS,


-- MEDIA 
M.STG_FILE_NAME ,
M.STG_FILE_ROW_NUMBER ,
M.STG_FILE_HASHKEY ,
M.STG_FILE_MODIFIED_TS
FROM DEMO_DB.ALF_RAW.MATCH_RAW_TBL M, 
LATERAL FLATTEN (INPUT => M.INNINGS) AS I,
LATERAL FLATTEN (INPUT => I.VALUE:overs) AS O,
LATERAL FLATTEN (INPUT => O.VALUE:deliveries) AS D,
LATERAL FLATTEN (INPUT => D.VALUE:extras, OUTER => TRUE) AS E -- outer=True to get null 
where match_type_number = 4670
;


-- VERSION 3  - LETS EXTRACT wickets ARRAY
SELECT M.INFO:match_type_number::NUMBER AS match_type_number,
I.VALUE:team::string as TEAM,
O.VALUE:over::NUMBER AS OVER,
D.VALUE:bowler::VARCHAR AS bowler,
D.VALUE:non_striker::VARCHAR AS non_striker,
D.VALUE:runs.batter::NUMBER AS BATTER,
D.VALUE:runs.extras::NUMBER AS extras,
D.VALUE:runs.total::NUMBER AS total,
E.VALUE::NUMBER AS EXTRA_RUNS,
W.VALUE:fielders::VARIANT as fielders,
W.VALUE:kind::text as kind,
W.VALUE:player_out::text as player_out,

-- MEDIA 
M.STG_FILE_NAME ,
M.STG_FILE_ROW_NUMBER ,
M.STG_FILE_HASHKEY ,
M.STG_FILE_MODIFIED_TS
FROM DEMO_DB.ALF_RAW.MATCH_RAW_TBL M, 
LATERAL FLATTEN (INPUT => M.INNINGS) AS I,
LATERAL FLATTEN (INPUT => I.VALUE:overs) AS O,
LATERAL FLATTEN (INPUT => O.VALUE:deliveries) AS D,
LATERAL FLATTEN (INPUT => D.VALUE:extras, OUTER => TRUE) AS E, -- outer=True to get null ,
LATERAL FLATTEN (INPUT => D.VALUE:wickets, OUTER=> TRUE) AS W
where match_type_number = 4670
;


-- VERSION 6 CREATE TABLE DELIVERY_CLEAN_TBL 

CREATE OR REPLACE TRANSIENT TABLE DEMO_DB.ALF_CLEAN.DELIVERY_CLEAN_TBL
AS 
SELECT M.INFO:match_type_number::NUMBER AS match_type_number,
I.VALUE:team::string as TEAM_NAME,
O.VALUE:over::NUMBER AS OVER,
D.VALUE:bowler::VARCHAR AS bowler,
D.VALUE:non_striker::VARCHAR AS non_striker,
D.VALUE:runs.batter::NUMBER AS BATTER,
D.VALUE:runs.extras::NUMBER AS extras,
D.VALUE:runs.total::NUMBER AS total,
E.VALUE::NUMBER AS EXTRA_RUNS,
W.VALUE:fielders::VARIANT as fielders,
W.VALUE:kind::text as kind,
W.VALUE:player_out::text as player_out,
-- MEDIA 
M.STG_FILE_NAME ,
M.STG_FILE_ROW_NUMBER ,
M.STG_FILE_HASHKEY ,
M.STG_FILE_MODIFIED_TS
FROM DEMO_DB.ALF_RAW.MATCH_RAW_TBL M, 
LATERAL FLATTEN (INPUT => M.INNINGS) AS I,
LATERAL FLATTEN (INPUT => I.VALUE:overs) AS O,
LATERAL FLATTEN (INPUT => O.VALUE:deliveries) AS D,
LATERAL FLATTEN (INPUT => D.VALUE:extras, OUTER => TRUE) AS E, -- outer=True to get null ,
LATERAL FLATTEN (INPUT => D.VALUE:wickets, OUTER=> TRUE) AS W
;

SELECT TOP 10  * FROM DEMO_DB.ALF_CLEAN.DELIVERY_CLEAN_TBL;
SELECT  COUNT(DISTINCT MATCH_TYPE_NUMBER) FROM DEMO_DB.ALF_CLEAN.DELIVERY_CLEAN_TBL;

LIST @DEMO_DB.ALF_LAND.STG_LAND/cricket/json;

DESC TABLE DEMO_DB.ALF_CLEAN.DELIVERY_CLEAN_TBL;

-- ADD NOT NULL ANS SET FK RELATIONSHIP (FOREIGN KEY)
ALTER TABLE DEMO_DB.ALF_CLEAN.DELIVERY_CLEAN_TBL ALTER(
    MATCH_TYPE_NUMBER SET NOT NULL,
    TEAM_NAME SET NOT NULL,
    OVER SET NOT NULL,
    BOWLER SET NOT NULL,
    NON_STRIKER SET NOT NULL,
    BATTER SET NOT NULL
) ;

-- FK RELATIONSHIP
ALTER TABLE DEMO_DB.ALF_CLEAN.DELIVERY_CLEAN_TBL ADD CONSTRAINT 
FK_DELIVERY_MATCH_ID FOREIGN KEY (MATCH_TYPE_NUMBER)
REFERENCES DEMO_DB.ALF_CLEAN.MATCH_DETAIL_CLEAN;



-- ddl 
SELECT GET_DDL('TABLE', 'DEMO_DB.ALF_CLEAN.DELIVERY_CLEAN_TBL');
/*
create or replace TRANSIENT TABLE DELIVERY_CLEAN_TBL (
	MATCH_TYPE_NUMBER NUMBER(38,0) NOT NULL,
	TEAM_NAME VARCHAR(16777216) NOT NULL,
	OVER NUMBER(38,0) NOT NULL,
	BOWLER VARCHAR(16777216) NOT NULL,
	NON_STRIKER VARCHAR(16777216) NOT NULL,
	BATTER NUMBER(38,0) NOT NULL,
	EXTRAS NUMBER(38,0),
	TOTAL NUMBER(38,0),
	EXTRA_RUNS NUMBER(38,0),
	FIELDERS VARIANT,
	KIND VARCHAR(16777216),
	PLAYER_OUT VARCHAR(16777216),
	STG_FILE_NAME VARCHAR(16777216),
	STG_FILE_ROW_NUMBER NUMBER(38,0),
	STG_FILE_HASHKEY VARCHAR(16777216),
	STG_FILE_MODIFIED_TS TIMESTAMP_NTZ(9),
	constraint FK_DELIVERY_MATCH_ID foreign key (MATCH_TYPE_NUMBER) references DEMO_DB.ALF_CLEAN.MATCH_DETAIL_CLEAN(MATCH_TYPE_NUMBER)
); */

